package ru.ani.subscription.management.service.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SourceApplicationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSourceApplicationAllPropertiesEquals(SourceApplication expected, SourceApplication actual) {
        assertSourceApplicationAutoGeneratedPropertiesEquals(expected, actual);
        assertSourceApplicationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSourceApplicationAllUpdatablePropertiesEquals(SourceApplication expected, SourceApplication actual) {
        assertSourceApplicationUpdatableFieldsEquals(expected, actual);
        assertSourceApplicationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSourceApplicationAutoGeneratedPropertiesEquals(SourceApplication expected, SourceApplication actual) {
        assertThat(actual)
            .as("Verify SourceApplication auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSourceApplicationUpdatableFieldsEquals(SourceApplication expected, SourceApplication actual) {
        assertThat(actual)
            .as("Verify SourceApplication relevant properties")
            .satisfies(a -> assertThat(a.getApplicationName()).as("check applicationName").isEqualTo(expected.getApplicationName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSourceApplicationUpdatableRelationshipsEquals(SourceApplication expected, SourceApplication actual) {
        assertThat(actual)
            .as("Verify SourceApplication relationships")
            .satisfies(a -> assertThat(a.getUser()).as("check user").isEqualTo(expected.getUser()));
    }
}
