package ru.ani.subscription.management.service.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClientSubscriptionDaoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientSubscriptionDaoAllPropertiesEquals(ClientSubscriptionDao expected, ClientSubscriptionDao actual) {
        assertClientSubscriptionDaoAutoGeneratedPropertiesEquals(expected, actual);
        assertClientSubscriptionDaoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientSubscriptionDaoAllUpdatablePropertiesEquals(
        ClientSubscriptionDao expected,
        ClientSubscriptionDao actual
    ) {
        assertClientSubscriptionDaoUpdatableFieldsEquals(expected, actual);
        assertClientSubscriptionDaoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientSubscriptionDaoAutoGeneratedPropertiesEquals(
        ClientSubscriptionDao expected,
        ClientSubscriptionDao actual
    ) {
        assertThat(actual)
            .as("Verify ClientSubscriptionDao auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientSubscriptionDaoUpdatableFieldsEquals(ClientSubscriptionDao expected, ClientSubscriptionDao actual) {
        assertThat(actual)
            .as("Verify ClientSubscriptionDao relevant properties")
            .satisfies(a -> assertThat(a.getStartDttm()).as("check startDttm").isEqualTo(expected.getStartDttm()))
            .satisfies(a -> assertThat(a.getEndDttm()).as("check endDttm").isEqualTo(expected.getEndDttm()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientSubscriptionDaoUpdatableRelationshipsEquals(
        ClientSubscriptionDao expected,
        ClientSubscriptionDao actual
    ) {
        assertThat(actual)
            .as("Verify ClientSubscriptionDao relationships")
            .satisfies(a -> assertThat(a.getUser()).as("check user").isEqualTo(expected.getUser()))
            .satisfies(a ->
                assertThat(a.getSubscriptionDetails()).as("check subscriptionDetails").isEqualTo(expected.getSubscriptionDetails())
            );
    }
}
