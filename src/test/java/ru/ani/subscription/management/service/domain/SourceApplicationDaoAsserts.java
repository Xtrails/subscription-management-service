package ru.ani.subscription.management.service.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SourceApplicationDaoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSourceApplicationDaoAllPropertiesEquals(SourceApplicationDao expected, SourceApplicationDao actual) {
        assertSourceApplicationDaoAutoGeneratedPropertiesEquals(expected, actual);
        assertSourceApplicationDaoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSourceApplicationDaoAllUpdatablePropertiesEquals(SourceApplicationDao expected, SourceApplicationDao actual) {
        assertSourceApplicationDaoUpdatableFieldsEquals(expected, actual);
        assertSourceApplicationDaoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSourceApplicationDaoAutoGeneratedPropertiesEquals(SourceApplicationDao expected, SourceApplicationDao actual) {
        assertThat(actual)
            .as("Verify SourceApplicationDao auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSourceApplicationDaoUpdatableFieldsEquals(SourceApplicationDao expected, SourceApplicationDao actual) {
        assertThat(actual)
            .as("Verify SourceApplicationDao relevant properties")
            .satisfies(a -> assertThat(a.getApplicationName()).as("check applicationName").isEqualTo(expected.getApplicationName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSourceApplicationDaoUpdatableRelationshipsEquals(SourceApplicationDao expected, SourceApplicationDao actual) {
        assertThat(actual)
            .as("Verify SourceApplicationDao relationships")
            .satisfies(a -> assertThat(a.getUser()).as("check user").isEqualTo(expected.getUser()));
    }
}
