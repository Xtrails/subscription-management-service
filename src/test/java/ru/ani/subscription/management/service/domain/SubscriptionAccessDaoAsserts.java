package ru.ani.subscription.management.service.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SubscriptionAccessDaoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubscriptionAccessDaoAllPropertiesEquals(SubscriptionAccessDao expected, SubscriptionAccessDao actual) {
        assertSubscriptionAccessDaoAutoGeneratedPropertiesEquals(expected, actual);
        assertSubscriptionAccessDaoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubscriptionAccessDaoAllUpdatablePropertiesEquals(
        SubscriptionAccessDao expected,
        SubscriptionAccessDao actual
    ) {
        assertSubscriptionAccessDaoUpdatableFieldsEquals(expected, actual);
        assertSubscriptionAccessDaoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubscriptionAccessDaoAutoGeneratedPropertiesEquals(
        SubscriptionAccessDao expected,
        SubscriptionAccessDao actual
    ) {
        assertThat(actual)
            .as("Verify SubscriptionAccessDao auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubscriptionAccessDaoUpdatableFieldsEquals(SubscriptionAccessDao expected, SubscriptionAccessDao actual) {
        assertThat(actual)
            .as("Verify SubscriptionAccessDao relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getOrder()).as("check order").isEqualTo(expected.getOrder()))
            .satisfies(a -> assertThat(a.getRole()).as("check role").isEqualTo(expected.getRole()))
            .satisfies(a -> assertThat(a.getRoleGroup()).as("check roleGroup").isEqualTo(expected.getRoleGroup()))
            .satisfies(a -> assertThat(a.getActive()).as("check active").isEqualTo(expected.getActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubscriptionAccessDaoUpdatableRelationshipsEquals(
        SubscriptionAccessDao expected,
        SubscriptionAccessDao actual
    ) {
        assertThat(actual)
            .as("Verify SubscriptionAccessDao relationships")
            .satisfies(a ->
                assertThat(a.getSubscriptionDetails()).as("check subscriptionDetails").isEqualTo(expected.getSubscriptionDetails())
            );
    }
}
