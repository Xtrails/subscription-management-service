package ru.aniscan.subscription.management.service.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ExternalUserAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExternalUserAllPropertiesEquals(ExternalUser expected, ExternalUser actual) {
        assertExternalUserAutoGeneratedPropertiesEquals(expected, actual);
        assertExternalUserAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExternalUserAllUpdatablePropertiesEquals(ExternalUser expected, ExternalUser actual) {
        assertExternalUserUpdatableFieldsEquals(expected, actual);
        assertExternalUserUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExternalUserAutoGeneratedPropertiesEquals(ExternalUser expected, ExternalUser actual) {
        assertThat(expected)
            .as("Verify ExternalUser auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExternalUserUpdatableFieldsEquals(ExternalUser expected, ExternalUser actual) {
        assertThat(expected)
            .as("Verify ExternalUser relevant properties")
            .satisfies(e -> assertThat(e.getExternalUserId()).as("check externalUserId").isEqualTo(actual.getExternalUserId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExternalUserUpdatableRelationshipsEquals(ExternalUser expected, ExternalUser actual) {
        // empty method
    }
}
