package ru.aniscan.subscription.management.service.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PaymentSystemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentSystemAllPropertiesEquals(PaymentSystem expected, PaymentSystem actual) {
        assertPaymentSystemAutoGeneratedPropertiesEquals(expected, actual);
        assertPaymentSystemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentSystemAllUpdatablePropertiesEquals(PaymentSystem expected, PaymentSystem actual) {
        assertPaymentSystemUpdatableFieldsEquals(expected, actual);
        assertPaymentSystemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentSystemAutoGeneratedPropertiesEquals(PaymentSystem expected, PaymentSystem actual) {
        assertThat(expected)
            .as("Verify PaymentSystem auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentSystemUpdatableFieldsEquals(PaymentSystem expected, PaymentSystem actual) {
        assertThat(expected)
            .as("Verify PaymentSystem relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentSystemUpdatableRelationshipsEquals(PaymentSystem expected, PaymentSystem actual) {
        assertThat(expected)
            .as("Verify PaymentSystem relationships")
            .satisfies(e -> assertThat(e.getSourceApplications()).as("check sourceApplications").isEqualTo(actual.getSourceApplications()));
    }
}
